{
  "profile": "Descripción de perfil.",
  "experiences": [ 
    { 
      "name": "Desarrollador Web", 
      "date": "2018 - Presente",
      "description": "A partir de septiembre de 2018 dedique mi tiempo en primer plano al desarrollo web, mi area preferida (y mas trabajada de momento) es el front-end side. Mis frameworks de desarrollo mas usado son VueJs. Experiencia avanzada en establecer conexión a servicios web, rutas dinamicas y almacenamiento local."
    },
    {
      "name": "Compositor Musical", 
      "date": "2017 - Presente",
      "description": "Poco menos que un trabajo, mi pasatiempo preferido es la composición musical, mis generos mas trabajados son Neo-Soul y Disco."
    },
    { 
      "name": "Freelancer", 
      "date": "2020 - Presente",
      "description": "Mi disponibilidad aquí depende importantemente de mi estado laboral actual, no acepto propuestas de ningún tipo mientras estoy en otro trabajo estable, solo ofrezco servicios de desarrollo web o composición musical (naturalmente.)"
    }
  ],
  "personalProyects": [
    {
      "title": "Clon de twitter",
      "description": "Fue construido usando sus integraciones (Vuex, Router, Vuetify...), este clon imita lo mas fielmente posible la interfaz basica de Twitter. No tiene un back-end, por lo que es completamente estatico. Tiene un diseño adaptable a dispositivos moviles.",
      "images": [
        { "url": "twitter1.png" },
        { "url": "twitter2.png" }
      ]
    },
    {
      "title": "Bot de Telegram (Node.js / Typescript)",
      "description": "Diseñado usando la API de telegram, este bot cumple un rol de moderador y utilidad al mismo, cada imagen posteada en el chat pasará por un filtro (DeepAI) que determina si es inadecuada. Permite buscar imagenes en Google sin dejar le chat. Es capaz de manipular imagenes basandose en comandos dados por el usuario.",
      "images": [
        { "url": "tBot.png" }
      ]
    },
    {
      "title": "Colisiones Programaticas (LibGDX - Java)",
      "description": "Un ejemplo simple de como sería diseñar un algoritmo de detección/detención de colisiones sin usar librerías fisicas.",
      "images": [
        { "url": "gdx1.png" },
        { "url": "gdx2.png" }
      ]
    },
    {
      "title": "Curriculum Vitae",
      "description": "El curriculum que estas leyendo fue diseñado en Vuejs. :)"
    }
  ],
  "skills": [
    { "name": "Vue.js", "icon": "fab fa-vuejs", "percentage": "95" },
    { "name": "Node.js", "icon": "fab fa-node", "percentage": "70" },
    { "name": "JavaScript", "icon": "fab fa-js", "percentage": "87" },
    { "name": "NPM", "icon": "fab fa-npm", "percentage": "65" },
    { "name": "Typescript", "icon": "mdi-language-typescript", "percentage": "80" },
    { "name": "HTML5", "icon": "fab fa-html5", "percentage": "84" },
    { "name": "Git", "icon": "fab fa-git-square", "percentage": "80" },
    { "name": "Docker", "icon": "fab fa-docker", "percentage": "45" },
    { "name": "CSS", "icon": "fab fa-css3-alt", "percentage": "78" },
    { "name": "Linux", "icon": "fab fa-linux", "percentage": "68" },
    { "name": "Composición musical", "icon": "fas fa-music", "percentage": "75" }

  ],
  "contact": [
    { "color": "black", "icon": "fab fa-github", "url": "github.com/Sphirye" },
    { "color": "blue", "icon": "fab fa-twitter", "url": "twitter.com/Sphirye" },
    { "color": "blue", "icon": "fab fa-telegram", "url": "@Sphirye" },
    { "color": "black", "icon": "fas fa-phone", "url": "+58 412-1725971" },
    { "color": "indigo lighten-1", "icon": "fab fa-discord", "url": "Sphirye#7777" },
    { "color": "red lighten-1", "icon": "mdi-gmail", "url": "ronielcontreras70@gmail.com" }
  ]
}